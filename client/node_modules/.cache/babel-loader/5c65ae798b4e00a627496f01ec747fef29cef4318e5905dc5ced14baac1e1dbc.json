{"ast":null,"code":"var _jsxFileName = \"/Users/sagyblecher/Desktop/sb/moveo_coding_app/client/src/components/TextEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport \"quill/dist/quill.snow.css\";\nimport Quill from \"quill\";\nimport { io } from \"socket.io-client\";\nimport { useParams } from \"react-router-dom\";\nimport { log } from \"console\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TextEditor() {\n  _s();\n  const [saveCode, setSaveCode] = useState(false);\n  const {\n    blockId\n  } = useParams();\n  const [socketId, setSocketId] = useState();\n  const [socket, setSocket] = useState();\n  const [quill, setQuill] = useState();\n  const [blockTitle, setBlockTitle] = useState(\"\");\n  const [isFirst, setIsfirst] = useState(true);\n\n  // Configure server connection.\n  useEffect(() => {\n    const s = io(\"http://localhost:3001\");\n    setSocket(s);\n    console.log(\"user\", socketId, \" connected :)\");\n    return () => {\n      console.log(\"user disconnected :(\");\n      s.disconnect();\n    };\n  }, []);\n\n  // Configure text-editor.\n  const wrapperRef = useCallback(wrapper => {\n    if (wrapper == null) return;\n\n    // Makes sure that editor appears only once each rendering.\n    wrapper.innerHTML = \"\";\n    const editor = document.createElement(\"div\");\n    wrapper.append(editor);\n    const q = new Quill(editor, {\n      theme: \"snow\",\n      modules: {\n        toolbar: false\n      },\n      formats: []\n    });\n    // Editor is disabled untill initial block will load.\n    q.disable();\n    q.setText(\"loading...\");\n    setQuill(q);\n  }, []);\n\n  // Handle self text change.\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n    const handler = (delta, oldDelta, source) => {\n      // Emit an event only for others text changes.\n      if (source !== \"user\") return;\n      // Send only the spcific text changes, not all doc.\n      socket.emit(\"send-changes\", delta);\n    };\n\n    // \"text-change\" is quill built-in event\n    quill.on(\"text-change\", handler);\n    return () => {\n      quill.off(\"text-change\", handler);\n    };\n  }, [socket, quill]);\n\n  // Handle receiving text change.\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n    const handler = delta => {\n      quill.updateContents(delta);\n    };\n\n    // \"text-change\" is quill built-in event\n    socket.on(\"receive-changes\", handler);\n    return () => {\n      socket.off(\"receive-changes\", handler);\n    };\n  }, [socket, quill]);\n\n  // Init code block.\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n    socket.once(\"load-block\", async (block, userCount) => {\n      console.log(\"1\", block);\n      quill.setText(block.code);\n      quill.enable();\n      setBlockTitle(block.title);\n      console.log(\"user count!*\", userCount);\n      setIsfirst(userCount === 1);\n      // console.log(isFirst);\n    });\n\n    socket.emit(\"get-block\", blockId);\n  }, [socket, quill, blockId]);\n\n  // Determine whether mentor or student\n  useEffect(() => {\n    if (socket == null) return;\n    socket.emit(\"is-first\");\n    console.log(\"is first from clie nt\");\n  }, [socket]);\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n    socket.emit(\"save-block\", quill.getContents());\n    console.log(\"from client: save the changes!\");\n  }, [socket, quill]);\n  useEffect(() => {\n    if (socket == null) return;\n    socket.emit(\"register-user\", socket.id);\n    return () => {\n      socket.emit(\"unregister-user\", socket.id);\n    };\n  }, []);\n  useEffect(() => {\n    if (quill == null) return;\n    quill.enable(isFirst);\n    console.log(\"is first?\", isFirst);\n  }, [isFirst]);\n  const updateCode = () => {\n    if (quill == null || socket == null) return;\n    socket.emit(\"save-block\", quill.getContents().ops[0].insert);\n  };\n  const tryfunc = () => {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: blockTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"container\",\n        ref: wrapperRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), isFirst ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Mentor mode - Read Only\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Student mode - Read and Write\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => updateCode(),\n      children: \"save code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => tryfunc(),\n      children: \"try\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TextEditor, \"hCReUZgvvGasPAtlFW+dph9hR5c=\", false, function () {\n  return [useParams];\n});\n_c = TextEditor;\nexport default TextEditor;\nvar _c;\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","Quill","io","useParams","log","jsxDEV","_jsxDEV","Fragment","_Fragment","TextEditor","_s","saveCode","setSaveCode","blockId","socketId","setSocketId","socket","setSocket","quill","setQuill","blockTitle","setBlockTitle","isFirst","setIsfirst","s","console","disconnect","wrapperRef","wrapper","innerHTML","editor","document","createElement","append","q","theme","modules","toolbar","formats","disable","setText","handler","delta","oldDelta","source","emit","on","off","updateContents","once","block","userCount","code","enable","title","getContents","id","updateCode","ops","insert","tryfunc","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/sagyblecher/Desktop/sb/moveo_coding_app/client/src/components/TextEditor.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport \"quill/dist/quill.snow.css\";\nimport Quill from \"quill\";\nimport { io } from \"socket.io-client\";\nimport { useParams } from \"react-router-dom\";\nimport { log } from \"console\";\n\nfunction TextEditor() {\n  const [saveCode, setSaveCode] = useState(false);\n\n  const { blockId } = useParams();\n  const [socketId, setSocketId] = useState();\n  const [socket, setSocket] = useState();\n  const [quill, setQuill] = useState();\n\n  const [blockTitle, setBlockTitle] = useState(\"\");\n  const [isFirst, setIsfirst] = useState(true);\n\n  // Configure server connection.\n  useEffect(() => {\n    const s = io(\"http://localhost:3001\");\n    setSocket(s);\n    console.log(\"user\", socketId, \" connected :)\");\n    return () => {\n      console.log(\"user disconnected :(\");\n      s.disconnect();\n    };\n  }, []);\n\n  // Configure text-editor.\n  const wrapperRef = useCallback((wrapper) => {\n    if (wrapper == null) return;\n\n    // Makes sure that editor appears only once each rendering.\n    wrapper.innerHTML = \"\";\n    const editor = document.createElement(\"div\");\n    wrapper.append(editor);\n\n    const q = new Quill(editor, {\n      theme: \"snow\",\n      modules: {\n        toolbar: false,\n      },\n      formats: [],\n    });\n    // Editor is disabled untill initial block will load.\n    q.disable();\n    q.setText(\"loading...\");\n    setQuill(q);\n  }, []);\n\n  // Handle self text change.\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n\n    const handler = (delta, oldDelta, source) => {\n      // Emit an event only for others text changes.\n      if (source !== \"user\") return;\n      // Send only the spcific text changes, not all doc.\n      socket.emit(\"send-changes\", delta);\n    };\n\n    // \"text-change\" is quill built-in event\n    quill.on(\"text-change\", handler);\n    return () => {\n      quill.off(\"text-change\", handler);\n    };\n  }, [socket, quill]);\n\n  // Handle receiving text change.\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n\n    const handler = (delta) => {\n      quill.updateContents(delta);\n    };\n\n    // \"text-change\" is quill built-in event\n    socket.on(\"receive-changes\", handler);\n    return () => {\n      socket.off(\"receive-changes\", handler);\n    };\n  }, [socket, quill]);\n\n  // Init code block.\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n\n    socket.once(\"load-block\", async (block, userCount) => {\n      console.log(\"1\", block);\n      quill.setText(block.code);\n      quill.enable();\n      setBlockTitle(block.title);\n      console.log(\"user count!*\", userCount);\n      setIsfirst(userCount === 1);\n      // console.log(isFirst);\n    });\n    socket.emit(\"get-block\", blockId);\n  }, [socket, quill, blockId]);\n\n  // Determine whether mentor or student\n  useEffect(() => {\n    if (socket == null) return;\n    socket.emit(\"is-first\");\n    console.log(\"is first from clie nt\");\n  }, [socket]);\n\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n\n    socket.emit(\"save-block\", quill.getContents());\n    console.log(\"from client: save the changes!\");\n  }, [socket, quill]);\n\n  useEffect(() => {\n    if (socket == null) return;\n    socket.emit(\"register-user\", socket.id);\n    return () => {\n      socket.emit(\"unregister-user\", socket.id);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (quill == null) return;\n    quill.enable(isFirst);\n    console.log(\"is first?\", isFirst);\n  }, [isFirst]);\n\n  const updateCode = () => {\n    if (quill == null || socket == null) return;\n    socket.emit(\"save-block\", quill.getContents().ops[0].insert);\n  };\n  const tryfunc = () => {};\n\n  return (\n    <>\n      <span>{blockTitle}</span>\n      <div>\n        <div id=\"container\" ref={wrapperRef}></div>\n      </div>\n      {isFirst ? (\n        <span>Mentor mode - Read Only</span>\n      ) : (\n        <span>Student mode - Read and Write</span>\n      )}\n      <button onClick={() => updateCode()}>save code</button>\n      <button onClick={() => tryfunc()}>try</button>\n    </>\n  );\n}\n\nexport default TextEditor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}