{"ast":null,"code":"var _jsxFileName = \"/Users/sagyblecher/Desktop/sb/moveo_coding_app/client/src/components/TextEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport \"quill/dist/quill.snow.css\";\nimport Quill from \"quill\";\nimport { io } from \"socket.io-client\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TextEditor() {\n  _s();\n  const [saveCode, setSaveCode] = useState(false);\n  const {\n    blockId\n  } = useParams();\n  const [socketId, setSocketId] = useState();\n  const [socket, setSocket] = useState();\n  const [quill, setQuill] = useState();\n\n  // Configure server connection.\n  useEffect(() => {\n    const s = io(\"http://localhost:3001\");\n    setSocket(s);\n    console.log(\"user\", socketId, \" connected :)\");\n    return () => {\n      console.log(\"user disconnected :(\");\n      s.disconnect();\n    };\n  }, []);\n\n  // Configure text-editor.\n  const wrapperRef = useCallback(wrapper => {\n    if (wrapper == null) return;\n\n    // Makes sure that editor appears only once each rendering.\n    wrapper.innerHTML = \"\";\n    const editor = document.createElement(\"div\");\n    wrapper.append(editor);\n    const q = new Quill(editor, {\n      theme: \"snow\",\n      modules: {\n        toolbar: false\n      },\n      formats: []\n    });\n    // Editor is disabled untill initial block will load.\n    q.disable();\n    q.setText(\"loading...\");\n    setQuill(q);\n  }, []);\n\n  // Handle self text change.\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n    const handler = (delta, oldDelta, source) => {\n      // Emit an event only for others text changes.\n      if (source !== \"user\") return;\n      // Send only the spcific text changes, not all doc.\n      socket.emit(\"send-changes\", delta);\n    };\n\n    // \"text-change\" is quill built-in event\n    quill.on(\"text-change\", handler);\n    return () => {\n      quill.off(\"text-change\", handler);\n    };\n  }, [socket, quill]);\n\n  // Handle receiving text change.\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n    const handler = delta => {\n      quill.updateContents(delta);\n    };\n\n    // \"text-change\" is quill built-in event\n    socket.on(\"receive-changes\", handler);\n    return () => {\n      socket.off(\"receive-changes\", handler);\n    };\n  }, [socket, quill]);\n\n  // Init code block.\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n    socket.once(\"load-block\", async block => {\n      console.log(\"1\", block);\n      quill.setText(block);\n      quill.enable();\n    });\n    socket.emit(\"get-block\", blockId);\n  }, [socket, quill, blockId]);\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n\n    // const interval = setInterval(() => {\n    socket.emit(\"save-block\", quill.getContents());\n    console.log(\"from client: save the changes!\");\n    // return () => clearInterval(interval);\n    // }, SAVE_INTERVAL_MS);\n  }, [socket, quill]);\n\n  // useEffect(() => {\n  //   if (quill == null || socket == null) return;\n  //   socket.emit(\"save-block\", quill.getContents().ops[0].insert);\n  // }, [saveCode]);\n\n  useEffect(() => {\n    if (socket == null) return;\n    console.log(socket.id);\n    socket.emit(\"register-user\", socket.id);\n  }, [socket]);\n  const updateCode = () => {\n    if (quill == null || socket == null) return;\n    socket.emit(\"save-block\", quill.getContents().ops[0].insert);\n  };\n  const tryfunc = () => {\n    // var clients = io.sockets.clients(blockId);\n    // console.log(clients);\n    console.log(io);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"container\",\n        ref: wrapperRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => updateCode(),\n      children: \"save code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => tryfunc(),\n      children: \"try\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TextEditor, \"lOH/iYwqLw3ZILPs8T4qmLYzlnY=\", false, function () {\n  return [useParams];\n});\n_c = TextEditor;\nexport default TextEditor;\nvar _c;\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","Quill","io","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","TextEditor","_s","saveCode","setSaveCode","blockId","socketId","setSocketId","socket","setSocket","quill","setQuill","s","console","log","disconnect","wrapperRef","wrapper","innerHTML","editor","document","createElement","append","q","theme","modules","toolbar","formats","disable","setText","handler","delta","oldDelta","source","emit","on","off","updateContents","once","block","enable","getContents","id","updateCode","ops","insert","tryfunc","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/sagyblecher/Desktop/sb/moveo_coding_app/client/src/components/TextEditor.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport \"quill/dist/quill.snow.css\";\nimport Quill from \"quill\";\nimport { io } from \"socket.io-client\";\nimport { useParams } from \"react-router-dom\";\n\nfunction TextEditor() {\n  const [saveCode, setSaveCode] = useState(false);\n\n  const { blockId } = useParams();\n  const [socketId, setSocketId] = useState();\n  const [socket, setSocket] = useState();\n  const [quill, setQuill] = useState();\n\n  // Configure server connection.\n  useEffect(() => {\n    const s = io(\"http://localhost:3001\");\n    setSocket(s);\n    console.log(\"user\", socketId, \" connected :)\");\n    return () => {\n      console.log(\"user disconnected :(\");\n      s.disconnect();\n    };\n  }, []);\n\n  // Configure text-editor.\n  const wrapperRef = useCallback((wrapper) => {\n    if (wrapper == null) return;\n\n    // Makes sure that editor appears only once each rendering.\n    wrapper.innerHTML = \"\";\n    const editor = document.createElement(\"div\");\n    wrapper.append(editor);\n\n    const q = new Quill(editor, {\n      theme: \"snow\",\n      modules: {\n        toolbar: false,\n      },\n      formats: [],\n    });\n    // Editor is disabled untill initial block will load.\n    q.disable();\n    q.setText(\"loading...\");\n    setQuill(q);\n  }, []);\n\n  // Handle self text change.\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n\n    const handler = (delta, oldDelta, source) => {\n      // Emit an event only for others text changes.\n      if (source !== \"user\") return;\n      // Send only the spcific text changes, not all doc.\n      socket.emit(\"send-changes\", delta);\n    };\n\n    // \"text-change\" is quill built-in event\n    quill.on(\"text-change\", handler);\n    return () => {\n      quill.off(\"text-change\", handler);\n    };\n  }, [socket, quill]);\n\n  // Handle receiving text change.\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n\n    const handler = (delta) => {\n      quill.updateContents(delta);\n    };\n\n    // \"text-change\" is quill built-in event\n    socket.on(\"receive-changes\", handler);\n    return () => {\n      socket.off(\"receive-changes\", handler);\n    };\n  }, [socket, quill]);\n\n  // Init code block.\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n\n    socket.once(\"load-block\", async (block) => {\n      console.log(\"1\", block);\n      quill.setText(block);\n      quill.enable();\n    });\n    socket.emit(\"get-block\", blockId);\n  }, [socket, quill, blockId]);\n\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n\n    // const interval = setInterval(() => {\n    socket.emit(\"save-block\", quill.getContents());\n    console.log(\"from client: save the changes!\");\n    // return () => clearInterval(interval);\n    // }, SAVE_INTERVAL_MS);\n  }, [socket, quill]);\n\n  // useEffect(() => {\n  //   if (quill == null || socket == null) return;\n  //   socket.emit(\"save-block\", quill.getContents().ops[0].insert);\n  // }, [saveCode]);\n\n  useEffect(() => {\n    if (socket == null) return;\n    console.log(socket.id);\n    socket.emit(\"register-user\", socket.id);\n  }, [socket]);\n\n  const updateCode = () => {\n    if (quill == null || socket == null) return;\n    socket.emit(\"save-block\", quill.getContents().ops[0].insert);\n  };\n  const tryfunc = () => {\n    // var clients = io.sockets.clients(blockId);\n    // console.log(clients);\n    console.log(io);\n  };\n\n  return (\n    <>\n      <div>\n        <div id=\"container\" ref={wrapperRef}></div>\n      </div>\n      <button onClick={() => updateCode()}>save code</button>\n      <button onClick={() => tryfunc()}>try</button>\n    </>\n  );\n}\n\nexport default TextEditor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}