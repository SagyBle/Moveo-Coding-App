[{"/Users/sagyblecher/Desktop/sb/moveo_coding_app/client/src/index.js":"1","/Users/sagyblecher/Desktop/sb/moveo_coding_app/client/src/App.js":"2","/Users/sagyblecher/Desktop/sb/moveo_coding_app/client/src/components/TextEditor.jsx":"3","/Users/sagyblecher/Desktop/sb/moveo_coding_app/client/src/pages/Lobby.jsx":"4","/Users/sagyblecher/Desktop/sb/moveo_coding_app/client/src/pages/CodeBlock.jsx":"5"},{"size":254,"mtime":1683877026357,"results":"6","hashOfConfig":"7"},{"size":502,"mtime":1683883964169,"results":"8","hashOfConfig":"7"},{"size":3670,"mtime":1683902452289,"results":"9","hashOfConfig":"7"},{"size":740,"mtime":1683893603965,"results":"10","hashOfConfig":"7"},{"size":526,"mtime":1683901106992,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1p9mut7",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sagyblecher/Desktop/sb/moveo_coding_app/client/src/index.js",[],[],[],"/Users/sagyblecher/Desktop/sb/moveo_coding_app/client/src/App.js",["30"],[],"import \"./App.css\";\nimport TextEditor from \"./components/TextEditor\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Lobby from \"./pages/Lobby\";\nimport CodeBlock from \"./pages/CodeBlock\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Lobby />}></Route>\n      </Routes>\n      <Routes>\n        <Route path=\"/codeBlocks/:blockId\" element={<CodeBlock />}></Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/sagyblecher/Desktop/sb/moveo_coding_app/client/src/components/TextEditor.jsx",["31","32","33","34","35"],[],"import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport \"quill/dist/quill.snow.css\";\nimport Quill from \"quill\";\nimport { io } from \"socket.io-client\";\nimport { useParams } from \"react-router-dom\";\n\nfunction TextEditor() {\n  const [saveCode, setSaveCode] = useState(false);\n\n  const { blockId } = useParams();\n  const [socketId, setSocketId] = useState();\n  const [socket, setSocket] = useState();\n  const [quill, setQuill] = useState();\n\n  // Configure server connection.\n  useEffect(() => {\n    const s = io(\"http://localhost:3001\");\n    setSocket(s);\n    console.log(\"user\", socketId, \" connected :)\");\n    return () => {\n      console.log(\"user disconnected :(\");\n      s.disconnect();\n    };\n  }, []);\n\n  // Configure text-editor.\n  const wrapperRef = useCallback((wrapper) => {\n    if (wrapper == null) return;\n\n    // Makes sure that editor appears only once each rendering.\n    wrapper.innerHTML = \"\";\n    const editor = document.createElement(\"div\");\n    wrapper.append(editor);\n\n    const q = new Quill(editor, {\n      theme: \"snow\",\n      modules: {\n        toolbar: false,\n      },\n      formats: [],\n    });\n    // Editor is disabled untill initial block will load.\n    q.disable();\n    q.setText(\"loading...\");\n    setQuill(q);\n  }, []);\n\n  // Handle self text change.\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n\n    const handler = (delta, oldDelta, source) => {\n      // Emit an event only for others text changes.\n      if (source !== \"user\") return;\n      // Send only the spcific text changes, not all doc.\n      socket.emit(\"send-changes\", delta);\n    };\n\n    // \"text-change\" is quill built-in event\n    quill.on(\"text-change\", handler);\n    return () => {\n      quill.off(\"text-change\", handler);\n    };\n  }, [socket, quill]);\n\n  // Handle receiving text change.\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n\n    const handler = (delta) => {\n      quill.updateContents(delta);\n    };\n\n    // \"text-change\" is quill built-in event\n    socket.on(\"receive-changes\", handler);\n    return () => {\n      socket.off(\"receive-changes\", handler);\n    };\n  }, [socket, quill]);\n\n  // Init code block.\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n\n    socket.once(\"load-block\", async (block) => {\n      console.log(\"1\", block);\n      quill.setText(block);\n      quill.enable();\n    });\n    socket.emit(\"get-block\", blockId);\n  }, [socket, quill, blockId]);\n\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n\n    // const interval = setInterval(() => {\n    socket.emit(\"save-block\", quill.getContents());\n    console.log(\"from client: save the changes!\");\n    // return () => clearInterval(interval);\n    // }, SAVE_INTERVAL_MS);\n  }, [socket, quill]);\n\n  // useEffect(() => {\n  //   if (quill == null || socket == null) return;\n  //   socket.emit(\"save-block\", quill.getContents().ops[0].insert);\n  // }, [saveCode]);\n\n  useEffect(() => {\n    if (socket == null) return;\n    socket.emit(\"register-user\", socket.id);\n    return () => {\n      socket.emit(\"unregister-user\", socket.id);\n    };\n  }, [socket]);\n\n  const updateCode = () => {\n    if (quill == null || socket == null) return;\n    socket.emit(\"save-block\", quill.getContents().ops[0].insert);\n  };\n  const tryfunc = () => {\n    // var clients = io.sockets.clients(blockId);\n    // console.log(clients);\n    console.log(io);\n  };\n\n  return (\n    <>\n      <div>\n        <div id=\"container\" ref={wrapperRef}></div>\n      </div>\n      <button onClick={() => updateCode()}>save code</button>\n      <button onClick={() => tryfunc()}>try</button>\n    </>\n  );\n}\n\nexport default TextEditor;\n","/Users/sagyblecher/Desktop/sb/moveo_coding_app/client/src/pages/Lobby.jsx",[],[],"/Users/sagyblecher/Desktop/sb/moveo_coding_app/client/src/pages/CodeBlock.jsx",[],[],{"ruleId":"36","severity":1,"message":"37","line":2,"column":8,"nodeType":"38","messageId":"39","endLine":2,"endColumn":18},{"ruleId":"36","severity":1,"message":"40","line":1,"column":41,"nodeType":"38","messageId":"39","endLine":1,"endColumn":47},{"ruleId":"36","severity":1,"message":"41","line":8,"column":10,"nodeType":"38","messageId":"39","endLine":8,"endColumn":18},{"ruleId":"36","severity":1,"message":"42","line":8,"column":20,"nodeType":"38","messageId":"39","endLine":8,"endColumn":31},{"ruleId":"36","severity":1,"message":"43","line":11,"column":20,"nodeType":"38","messageId":"39","endLine":11,"endColumn":31},{"ruleId":"44","severity":1,"message":"45","line":24,"column":6,"nodeType":"46","endLine":24,"endColumn":8,"suggestions":"47"},"no-unused-vars","'TextEditor' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'saveCode' is assigned a value but never used.","'setSaveCode' is assigned a value but never used.","'setSocketId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socketId'. Either include it or remove the dependency array.","ArrayExpression",["48"],{"desc":"49","fix":"50"},"Update the dependencies array to be: [socketId]",{"range":"51","text":"52"},[725,727],"[socketId]"]